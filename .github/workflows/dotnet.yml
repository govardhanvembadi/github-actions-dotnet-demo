name: .NET Core Build and Test

on:
  schedule:
    - cron: '0 6 * * *'
    
  pull_request:
    branches: ["main"]
  
  workflow_dispatch:
    inputs:
      dotnet_version:
        description: '.NET version'
        required: true
        type: string
        default: '9.0'
      build_artifacts:
        description: 'to build artifacts'
        required: false
        type: boolean
        default: false
      print_config:
        description: 'to print config'
        required: true
        type: boolean
        default: false
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2   
      
    - name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ inputs.dotnet_version }} 

    - name: dotnet version
      run: echo dotnet version ${{ inputs.dotnet_version }}
    - name: Restore dependencies for mainapp
      run: dotnet restore MainApplication/MainApplication/MainApplication.csproj 

#    - name: Cache NuGet packages
#      uses: actions/cache@v4
#      with:
#        path: ~/.nuget/packages
#        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
#        restore-keys: |
#          ${{ runner.os }}-nuget-


    - name: Restore dependencies for mainapp.tests
      run: dotnet restore MainApplication/MainApplication.Tests/MainApplication.Tests.csproj 
      
    - name: Build the mainapp project
      run: dotnet build MainApplication/MainApplication/MainApplication.csproj  

    - name: Build the MainApplication.tests project
      run: dotnet build MainApplication/MainApplication.Tests/MainApplication.Tests.csproj 
 
    - name: Run tests for MainApplication.tests
      run: dotnet test MainApplication/MainApplication.Tests/MainApplication.Tests.csproj   

      
  print_configs:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: print config
        uses: ./.github/actions/reusable_action
        with:
          build_artifacts: ${{ inputs.build_artifacts }}
          print_config: ${{ inputs.print_config }}

   
